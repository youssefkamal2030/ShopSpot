{"ast":null,"code":"var _jsxFileName = \"E:\\\\Protiflio project\\\\amazon-clone\\\\src\\\\AppProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const CartContext = /*#__PURE__*/createContext(null);\nexport const ProductContext = /*#__PURE__*/createContext(null);\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const getStockCount = productId => {\n    const product = products.find(p => p.id === productId);\n    return product ? product.amount : 0;\n  };\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('https://fakestoreapi.com/products');\n        const data = await response.json();\n        const modifiedData = data.map(product => ({\n          ...product,\n          amount: 20\n        }));\n        setProducts(modifiedData);\n      } catch (error) {\n        console.error('Failed to fetch products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const fetchCartData = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const cartData = await response.json();\n        setCart(cartData);\n      } else {\n        console.error('Failed to fetch cart data');\n      }\n    } catch (error) {\n      console.error('Error fetching cart data:', error);\n    }\n  };\n  const updateCartDataOnBackend = async cart => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        console.error('Failed to update cart data');\n      }\n    } catch (error) {\n      console.error('Error updating cart data:', error);\n    }\n  };\n  const addToCart = (product, quantity) => {\n    const existingProduct = cart.find(item => item.product.id === product.id);\n    let updatedCart;\n    if (existingProduct) {\n      updatedCart = cart.map(item => item.product.id === product.id ? {\n        ...item,\n        quantity: item.quantity + quantity\n      } : item);\n    } else {\n      updatedCart = [...cart, {\n        product,\n        quantity\n      }];\n    }\n    setCart(updatedCart);\n    updateCartDataOnBackend(updatedCart);\n  };\n  const removeFromCart = productId => {\n    const updatedCart = cart.filter(item => item.product.id !== productId);\n    setCart(updatedCart);\n    updateCartDataOnBackend(updatedCart);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: {\n        products,\n        getStockCount\n      },\n      children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n        value: {\n          cart,\n          addToCart,\n          removeFromCart,\n          fetchCartData\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"nmFynKkKghjI8iohv56ZRAm+XeM=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","CartContext","ProductContext","AppProvider","children","_s","user","setUser","cart","setCart","products","setProducts","storedUser","localStorage","getItem","JSON","parse","getStockCount","productId","product","find","p","id","amount","fetchProducts","response","fetch","data","json","modifiedData","map","error","console","fetchCartData","token","method","headers","ok","cartData","updateCartDataOnBackend","body","stringify","addToCart","quantity","existingProduct","item","updatedCart","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Protiflio project/amazon-clone/src/AppProvider.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\nexport const CartContext = createContext(null);\r\nexport const ProductContext = createContext(null);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [cart, setCart] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n            setUser(JSON.parse(storedUser));\r\n        }\r\n    }, []);\r\n\r\n    const getStockCount = (productId) => {\r\n        const product = products.find(p => p.id === productId);\r\n        return product ? product.amount : 0;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await fetch('https://fakestoreapi.com/products');\r\n                const data = await response.json();\r\n                const modifiedData = data.map(product => ({\r\n                    ...product,\r\n                    amount: 20\r\n                }));\r\n                setProducts(modifiedData);\r\n            } catch (error) {\r\n                console.error('Failed to fetch products:', error);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchCartData = async () => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                }\r\n            });\r\n            if (response.ok) {\r\n                const cartData = await response.json();\r\n                setCart(cartData);\r\n            } else {\r\n                console.error('Failed to fetch cart data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching cart data:', error);\r\n        }\r\n    };\r\n\r\n    const updateCartDataOnBackend = async (cart) => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(cart),\r\n            });\r\n            if (!response.ok) {\r\n                console.error('Failed to update cart data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating cart data:', error);\r\n        }\r\n    };\r\n\r\n    const addToCart = (product, quantity) => {\r\n        const existingProduct = cart.find(item => item.product.id === product.id);\r\n        let updatedCart;\r\n        if (existingProduct) {\r\n            updatedCart = cart.map(item => item.product.id === product.id ?\r\n                { ...item, quantity: item.quantity + quantity } : item);\r\n        } else {\r\n            updatedCart = [...cart, { product, quantity }];\r\n        }\r\n        setCart(updatedCart);\r\n\r\n        updateCartDataOnBackend(updatedCart);\r\n    };\r\n\r\n    const removeFromCart = (productId) => {\r\n        const updatedCart = cart.filter(item => item.product.id !== productId);\r\n        setCart(updatedCart);\r\n        updateCartDataOnBackend(updatedCart);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser }}>\r\n            <ProductContext.Provider value={{ products, getStockCount }}>\r\n                <CartContext.Provider value={{ cart, addToCart, removeFromCart, fetchCartData }}>\r\n                    {children}\r\n                </CartContext.Provider>\r\n            </ProductContext.Provider>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}