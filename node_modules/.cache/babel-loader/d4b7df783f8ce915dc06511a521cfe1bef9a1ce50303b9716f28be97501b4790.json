{"ast":null,"code":"var _jsxFileName = \"E:\\\\Protiflio project\\\\amazon-clone\\\\src\\\\AppProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const CartContext = /*#__PURE__*/createContext(null);\nexport const ProductContext = /*#__PURE__*/createContext(null);\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('https://fakestoreapi.com/products');\n        const data = await response.json();\n        const modifiedData = data.map(product => ({\n          ...product,\n          amount: 20\n        }));\n        setProducts(modifiedData);\n      } catch (error) {\n        console.error('Failed to fetch products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const loginUser = userData => {\n    setUser({\n      ...userData,\n      loggedIn: true\n    });\n    localStorage.setItem('user', JSON.stringify({\n      ...userData,\n      loggedIn: true\n    }));\n  };\n  const logoutUser = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const addToCart = (product, quantity) => {\n    const existingProduct = cart.find(item => item.product.id === product.id);\n    if (existingProduct) {\n      setCart(cart.map(item => item.product.id === product.id ? {\n        ...item,\n        quantity: item.quantity + quantity\n      } : item));\n    } else {\n      setCart([...cart, {\n        product,\n        quantity\n      }]);\n    }\n    setProducts(products.map(p => p.id === product.id ? {\n      ...p,\n      amount: p.amount - quantity\n    } : p));\n  };\n  const removeFromCart = productId => {\n    const removedProduct = cart.find(item => item.product.id === productId);\n    setCart(cart.filter(item => item.product.id !== productId));\n    setProducts(products.map(p => p.id === productId ? {\n      ...p,\n      amount: p.amount + (removedProduct ? removedProduct.quantity : 0)\n    } : p));\n  };\n  const getStockCount = productId => {\n    const product = products.find(p => p.id === productId);\n    return product ? product.amount : 0;\n  };\n\n  // Function to send the cart data to the backend\n  const sendCartData = async () => {\n    const cartData = cart.map(item => ({\n      product_id: item.product.id,\n      quantity: item.quantity\n    }));\n    const token = localStorage.getItem('token'); // Retrieve token if necessary\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Add token if the backend requires authentication\n        },\n        body: JSON.stringify(cartData)\n      });\n      if (response.ok) {\n        console.log('Cart data sent successfully');\n      } else {\n        console.error('Failed to send cart data:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error sending cart data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      logoutUser\n    },\n    children: /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: {\n        products\n      },\n      children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n        value: {\n          cart,\n          addToCart,\n          removeFromCart,\n          getStockCount,\n          sendCartData\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"nmFynKkKghjI8iohv56ZRAm+XeM=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","CartContext","ProductContext","AppProvider","children","_s","user","setUser","cart","setCart","products","setProducts","storedUser","localStorage","getItem","JSON","parse","fetchProducts","response","fetch","data","json","modifiedData","map","product","amount","error","console","loginUser","userData","loggedIn","setItem","stringify","logoutUser","removeItem","addToCart","quantity","existingProduct","find","item","id","p","removeFromCart","productId","removedProduct","filter","getStockCount","sendCartData","cartData","product_id","token","method","headers","body","ok","log","statusText","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Protiflio project/amazon-clone/src/AppProvider.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\nexport const CartContext = createContext(null);\r\nexport const ProductContext = createContext(null);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [cart, setCart] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n            setUser(JSON.parse(storedUser));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await fetch('https://fakestoreapi.com/products');\r\n                const data = await response.json();\r\n\r\n                const modifiedData = data.map(product => ({\r\n                    ...product,\r\n                    amount: 20\r\n                }));\r\n\r\n                setProducts(modifiedData);\r\n            } catch (error) {\r\n                console.error('Failed to fetch products:', error);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const loginUser = (userData) => {\r\n        setUser({\r\n            ...userData,\r\n            loggedIn: true \r\n        });\r\n        localStorage.setItem('user', JSON.stringify({\r\n            ...userData,\r\n            loggedIn: true\r\n        }));\r\n    };\r\n\r\n    const logoutUser = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('user');\r\n    };\r\n\r\n    const addToCart = (product, quantity) => {\r\n        const existingProduct = cart.find(item => item.product.id === product.id);\r\n        if (existingProduct) {\r\n            setCart(cart.map(item => item.product.id === product.id ?\r\n                { ...item, quantity: item.quantity + quantity } : item));\r\n        } else {\r\n            setCart([...cart, { product, quantity }]);\r\n        }\r\n\r\n        setProducts(products.map(p => p.id === product.id ?\r\n            { ...p, amount: p.amount - quantity } : p));\r\n    };\r\n\r\n    const removeFromCart = (productId) => {\r\n        const removedProduct = cart.find(item => item.product.id === productId);\r\n        setCart(cart.filter(item => item.product.id !== productId));\r\n\r\n        setProducts(products.map(p => p.id === productId ?\r\n            { ...p, amount: p.amount + (removedProduct ? removedProduct.quantity : 0) } : p));\r\n    };\r\n\r\n    const getStockCount = (productId) => {\r\n        const product = products.find(p => p.id === productId);\r\n        return product ? product.amount : 0;\r\n    };\r\n\r\n    // Function to send the cart data to the backend\r\n    const sendCartData = async () => {\r\n        const cartData = cart.map(item => ({\r\n            product_id: item.product.id,\r\n            quantity: item.quantity\r\n        }));\r\n\r\n        const token = localStorage.getItem('token'); // Retrieve token if necessary\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`, // Add token if the backend requires authentication\r\n                },\r\n                body: JSON.stringify(cartData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Cart data sent successfully');\r\n            } else {\r\n                console.error('Failed to send cart data:', response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending cart data:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, loginUser, logoutUser }}>\r\n            <ProductContext.Provider value={{ products }}>\r\n                <CartContext.Provider value={{ cart, addToCart, removeFromCart, getStockCount, sendCartData }}>\r\n                    {children}\r\n                </CartContext.Provider>\r\n            </ProductContext.Provider>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}