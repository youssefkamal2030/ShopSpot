{"ast":null,"code":"var _jsxFileName = \"E:\\\\Protiflio project\\\\ShopSpot\\\\src\\\\AppProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const CartContext = /*#__PURE__*/createContext(null);\nexport const ProductContext = /*#__PURE__*/createContext(null);\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const loginUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logoutUser = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('https://fakestoreapi.com/products');\n        const data = await response.json();\n        const modifiedData = data.map(product => ({\n          ...product,\n          amount: 20 // Default stock amount\n        }));\n        setProducts(modifiedData);\n      } catch (error) {\n        console.error('Failed to fetch products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const fetchCartData = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const cartData = await response.json();\n        setCart(cartData);\n      } else {\n        console.error('Failed to fetch cart data');\n      }\n    } catch (error) {\n      console.error('Error fetching cart data:', error);\n    }\n  };\n  const updateCartDataOnBackend = async cart => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `${token}`\n        },\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        console.error('Failed to update cart data');\n      }\n    } catch (error) {\n      console.error('Error updating cart data:', error);\n    }\n  };\n  const addToCart = (product, quantity) => {\n    const existingProduct = cart.find(item => item.product.id === product.id);\n    let updatedCart;\n    if (existingProduct) {\n      updatedCart = cart.map(item => item.product.id === product.id ? {\n        ...item,\n        quantity: item.quantity + quantity\n      } : item);\n    } else {\n      updatedCart = [...cart, {\n        product,\n        quantity\n      }];\n    }\n    setCart(updatedCart);\n    setProducts(products.map(p => p.id === product.id ? {\n      ...p,\n      amount: p.amount - quantity\n    } : p));\n    updateCartDataOnBackend(updatedCart);\n  };\n  const removeFromCart = productId => {\n    const updatedCart = cart.filter(item => item.product.id !== productId);\n    setCart(updatedCart);\n    updateCartDataOnBackend(updatedCart);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loginUser,\n      logoutUser\n    },\n    children: /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: {\n        products\n      },\n      children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n        value: {\n          cart,\n          addToCart,\n          removeFromCart,\n          fetchCartData\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"nmFynKkKghjI8iohv56ZRAm+XeM=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","CartContext","ProductContext","AppProvider","children","_s","user","setUser","cart","setCart","products","setProducts","storedUser","localStorage","getItem","JSON","parse","loginUser","userData","setItem","stringify","logoutUser","removeItem","fetchProducts","response","fetch","data","json","modifiedData","map","product","amount","error","console","fetchCartData","token","method","headers","ok","cartData","updateCartDataOnBackend","body","addToCart","quantity","existingProduct","find","item","id","updatedCart","p","removeFromCart","productId","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Protiflio project/ShopSpot/src/AppProvider.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\nexport const CartContext = createContext(null);\r\nexport const ProductContext = createContext(null);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [cart, setCart] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const loginUser = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await fetch('https://fakestoreapi.com/products');\r\n                const data = await response.json();\r\n                const modifiedData = data.map(product => ({\r\n                    ...product,\r\n                    amount: 20 // Default stock amount\r\n                }));\r\n                setProducts(modifiedData);\r\n            } catch (error) {\r\n                console.error('Failed to fetch products:', error);\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchCartData = async () => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                }\r\n            });\r\n            if (response.ok) {\r\n                const cartData = await response.json();\r\n                setCart(cartData);\r\n            } else {\r\n                console.error('Failed to fetch cart data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching cart data:', error);\r\n        }\r\n    };\r\n\r\n    const updateCartDataOnBackend = async (cart) => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/categories/Categories/cart/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `${token}`,\r\n                },\r\n                body: JSON.stringify(cart),\r\n            });\r\n            if (!response.ok) {\r\n                console.error('Failed to update cart data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating cart data:', error);\r\n        }\r\n    };\r\n\r\n    const addToCart = (product, quantity) => {\r\n        const existingProduct = cart.find(item => item.product.id === product.id);\r\n        let updatedCart;\r\n        if (existingProduct) {\r\n            updatedCart = cart.map(item => item.product.id === product.id ?\r\n                { ...item, quantity: item.quantity + quantity } : item);\r\n        } else {\r\n            updatedCart = [...cart, { product, quantity }];\r\n        }\r\n        setCart(updatedCart);\r\n        setProducts(products.map(p =>\r\n            p.id === product.id ? { ...p, amount: p.amount - quantity } : p\r\n        ));\r\n\r\n        updateCartDataOnBackend(updatedCart);\r\n    };\r\n\r\n    const removeFromCart = (productId) => {\r\n        const updatedCart = cart.filter(item => item.product.id !== productId);\r\n        setCart(updatedCart);\r\n        updateCartDataOnBackend(updatedCart);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser,loginUser,logoutUser }}>\r\n            <ProductContext.Provider value={{ products }}>\r\n                <CartContext.Provider value={{ cart, addToCart, removeFromCart, fetchCartData }}>\r\n                    {children}\r\n                </CartContext.Provider>\r\n            </ProductContext.Provider>\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAC9C,OAAO,MAAMM,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAC9C,OAAO,MAAMO,cAAc,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEjD,OAAO,MAAMQ,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACnD,IAAIF,UAAU,EAAE;MACdL,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAIC,QAAQ,IAAK;IAC9BX,OAAO,CAACW,QAAQ,CAAC;IACjBL,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBd,OAAO,CAAC,IAAI,CAAC;IACbM,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAECzB,SAAS,CAAC,MAAM;IACZ,MAAM0B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMC,YAAY,GAAGF,IAAI,CAACG,GAAG,CAACC,OAAO,KAAK;UACtC,GAAGA,OAAO;UACVC,MAAM,EAAE,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QACHpB,WAAW,CAACiB,YAAY,CAAC;MAC7B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IACDT,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,KAAK,GAAGtB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;QAC9EW,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUF,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,IAAIX,QAAQ,CAACc,EAAE,EAAE;QACb,MAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtClB,OAAO,CAAC8B,QAAQ,CAAC;MACrB,CAAC,MAAM;QACHN,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,MAAMQ,uBAAuB,GAAG,MAAOhC,IAAI,IAAK;IAC5C,MAAM2B,KAAK,GAAGtB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;QAC9EW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,GAAGF,KAAK;QAC7B,CAAC;QACDM,IAAI,EAAE1B,IAAI,CAACK,SAAS,CAACZ,IAAI;MAC7B,CAAC,CAAC;MACF,IAAI,CAACgB,QAAQ,CAACc,EAAE,EAAE;QACdL,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,MAAMU,SAAS,GAAGA,CAACZ,OAAO,EAAEa,QAAQ,KAAK;IACrC,MAAMC,eAAe,GAAGpC,IAAI,CAACqC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAChB,OAAO,CAACiB,EAAE,KAAKjB,OAAO,CAACiB,EAAE,CAAC;IACzE,IAAIC,WAAW;IACf,IAAIJ,eAAe,EAAE;MACjBI,WAAW,GAAGxC,IAAI,CAACqB,GAAG,CAACiB,IAAI,IAAIA,IAAI,CAAChB,OAAO,CAACiB,EAAE,KAAKjB,OAAO,CAACiB,EAAE,GACzD;QAAE,GAAGD,IAAI;QAAEH,QAAQ,EAAEG,IAAI,CAACH,QAAQ,GAAGA;MAAS,CAAC,GAAGG,IAAI,CAAC;IAC/D,CAAC,MAAM;MACHE,WAAW,GAAG,CAAC,GAAGxC,IAAI,EAAE;QAAEsB,OAAO;QAAEa;MAAS,CAAC,CAAC;IAClD;IACAlC,OAAO,CAACuC,WAAW,CAAC;IACpBrC,WAAW,CAACD,QAAQ,CAACmB,GAAG,CAACoB,CAAC,IACtBA,CAAC,CAACF,EAAE,KAAKjB,OAAO,CAACiB,EAAE,GAAG;MAAE,GAAGE,CAAC;MAAElB,MAAM,EAAEkB,CAAC,CAAClB,MAAM,GAAGY;IAAS,CAAC,GAAGM,CAClE,CAAC,CAAC;IAEFT,uBAAuB,CAACQ,WAAW,CAAC;EACxC,CAAC;EAED,MAAME,cAAc,GAAIC,SAAS,IAAK;IAClC,MAAMH,WAAW,GAAGxC,IAAI,CAAC4C,MAAM,CAACN,IAAI,IAAIA,IAAI,CAAChB,OAAO,CAACiB,EAAE,KAAKI,SAAS,CAAC;IACtE1C,OAAO,CAACuC,WAAW,CAAC;IACpBR,uBAAuB,CAACQ,WAAW,CAAC;EACxC,CAAC;EAED,oBACIjD,OAAA,CAACC,WAAW,CAACqD,QAAQ;IAACC,KAAK,EAAE;MAAEhD,IAAI;MAAEC,OAAO;MAACU,SAAS;MAACI;IAAW,CAAE;IAAAjB,QAAA,eAChEL,OAAA,CAACG,cAAc,CAACmD,QAAQ;MAACC,KAAK,EAAE;QAAE5C;MAAS,CAAE;MAAAN,QAAA,eACzCL,OAAA,CAACE,WAAW,CAACoD,QAAQ;QAACC,KAAK,EAAE;UAAE9C,IAAI;UAAEkC,SAAS;UAAEQ,cAAc;UAAEhB;QAAc,CAAE;QAAA9B,QAAA,EAC3EA;MAAQ;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAE/B,CAAC;AAACrD,EAAA,CA/GWF,WAAW;AAAAwD,EAAA,GAAXxD,WAAW;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}