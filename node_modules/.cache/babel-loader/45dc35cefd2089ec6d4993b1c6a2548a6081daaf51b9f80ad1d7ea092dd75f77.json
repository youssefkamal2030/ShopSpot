{"ast":null,"code":"var _jsxFileName = \"E:\\\\Protiflio project\\\\amazon-clone\\\\src\\\\AppProvider.jsx\",\n  _s = $RefreshSig$();\n// AppProvider.js\nimport React, { createContext, useState, useEffect } from 'react';\n\n// UserContext for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\n\n// CartContext for shopping cart and stock management\nexport const CartContext = /*#__PURE__*/createContext(null);\nexport const ProductContext = /*#__PURE__*/createContext(null);\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  // State for UserContext\n  const [user, setUser] = useState(null);\n\n  // State for CartContext\n  const [cart, setCart] = useState([]);\n  const [products, setProducts] = useState([\n  // Example products with stock count\n  {\n    id: 1,\n    title: 'Product 1',\n    stock: 10\n  }, {\n    id: 2,\n    title: 'Product 2',\n    stock: 5\n  }]);\n\n  // Load user data from localStorage on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // Login function to update user context and store in localStorage\n  const loginUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // Logout function to clear user context and localStorage\n  const logoutUser = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Add to Cart function\n  const addToCart = (product, quantity) => {\n    const existingProduct = cart.find(item => item.product.id === product.id);\n    if (existingProduct) {\n      setCart(cart.map(item => item.product.id === product.id ? {\n        ...item,\n        quantity: item.quantity + quantity\n      } : item));\n    } else {\n      setCart([...cart, {\n        product,\n        quantity\n      }]);\n    }\n\n    // Update stock count\n    setProducts(products.map(p => p.id === product.id ? {\n      ...p,\n      stock: p.stock - quantity\n    } : p));\n  };\n\n  // Remove from Cart function\n  const removeFromCart = productId => {\n    const removedProduct = cart.find(item => item.product.id === productId);\n    setCart(cart.filter(item => item.product.id !== productId));\n\n    // Restore stock count\n    setProducts(products.map(p => p.id === productId ? {\n      ...p,\n      stock: p.stock + (removedProduct ? removedProduct.quantity : 0)\n    } : p));\n  };\n\n  // Get stock count for a product\n  const getStockCount = productId => {\n    const product = products.find(p => p.id === productId);\n    return product ? product.stock : 0;\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      logoutUser\n    },\n    children: /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: {\n        products\n      },\n      children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n        value: {\n          cart,\n          addToCart,\n          removeFromCart,\n          getStockCount\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"qJUQDqWWEUQ+FcdzjTrRoHJyNvc=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","CartContext","ProductContext","AppProvider","children","_s","user","setUser","cart","setCart","products","setProducts","id","title","stock","storedUser","localStorage","getItem","JSON","parse","loginUser","userData","setItem","stringify","logoutUser","removeItem","addToCart","product","quantity","existingProduct","find","item","map","p","removeFromCart","productId","removedProduct","filter","getStockCount","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Protiflio project/amazon-clone/src/AppProvider.jsx"],"sourcesContent":["// AppProvider.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\n// UserContext for authentication\r\nexport const UserContext = createContext(null);\r\n\r\n// CartContext for shopping cart and stock management\r\nexport const CartContext = createContext(null);\r\n\r\nexport const ProductContext = createContext(null);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  // State for UserContext\r\n  const [user, setUser] = useState(null);\r\n\r\n  // State for CartContext\r\n  const [cart, setCart] = useState([]);\r\n  const [products, setProducts] = useState([\r\n    // Example products with stock count\r\n    { id: 1, title: 'Product 1', stock: 10 },\r\n    { id: 2, title: 'Product 2', stock: 5 }\r\n  ]);\r\n\r\n  // Load user data from localStorage on mount\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  // Login function to update user context and store in localStorage\r\n  const loginUser = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  // Logout function to clear user context and localStorage\r\n  const logoutUser = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Add to Cart function\r\n  const addToCart = (product, quantity) => {\r\n    const existingProduct = cart.find(item => item.product.id === product.id);\r\n    if (existingProduct) {\r\n      setCart(cart.map(item => item.product.id === product.id ?\r\n        { ...item, quantity: item.quantity + quantity } : item));\r\n    } else {\r\n      setCart([...cart, { product, quantity }]);\r\n    }\r\n\r\n    // Update stock count\r\n    setProducts(products.map(p => p.id === product.id ?\r\n      { ...p, stock: p.stock - quantity } : p));\r\n  };\r\n\r\n  // Remove from Cart function\r\n  const removeFromCart = (productId) => {\r\n    const removedProduct = cart.find(item => item.product.id === productId);\r\n    setCart(cart.filter(item => item.product.id !== productId));\r\n\r\n    // Restore stock count\r\n    setProducts(products.map(p => p.id === productId ?\r\n      { ...p, stock: p.stock + (removedProduct ? removedProduct.quantity : 0) } : p));\r\n  };\r\n\r\n  // Get stock count for a product\r\n  const getStockCount = (productId) => {\r\n    const product = products.find(p => p.id === productId);\r\n    return product ? product.stock : 0;\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, loginUser, logoutUser }}>\r\n        <ProductContext.Provider value={{ products }}>\r\n      <CartContext.Provider value={{ cart, addToCart, removeFromCart, getStockCount }}>\r\n        {children}\r\n      </CartContext.Provider>\r\n      </ProductContext.Provider>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}